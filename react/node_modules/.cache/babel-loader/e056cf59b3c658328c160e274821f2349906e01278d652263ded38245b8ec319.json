{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\bp\\\\src\\\\PPGData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport './PatientRegistration.css';\nimport './ButtonContainer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PPGData() {\n  _s();\n  const {\n    patientId\n  } = useParams();\n  const [data, setData] = useState([]);\n  const [message, setMessage] = useState('');\n  const [chartLabel, setChartLabel] = useState('');\n  const [renderChartFlag, setRenderChartFlag] = useState(false);\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  const [startFlag, setStartFlag] = useState(false);\n  const [intervalId, setIntervalId] = useState(null);\n  useEffect(() => {\n    return () => clearInterval(intervalId);\n  }, [intervalId]);\n  useEffect(() => {\n    if (data.length > 0 && chartRef.current && renderChartFlag) {\n      renderChart();\n    }\n  }, [data, renderChartFlag]);\n  const fetchData = async endpoint => {\n    if (!patientId) return;\n    try {\n      const response = await axios.get(`http://127.0.0.1:80/api/${endpoint}/${patientId}`);\n      setData(response.data);\n      setMessage('');\n      setRenderChartFlag(true);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setMessage(`Error fetching data: ${error.message}`);\n    }\n  };\n  const navigate = useNavigate();\n  const handleButtonClick = () => {\n    fetchData('ppg');\n    setChartLabel('PPG Data');\n    const id = setInterval(() => {\n      fetchData('ppg');\n    }, 5000);\n    setIntervalId(id);\n  };\n  const renderChart = () => {\n    const ctx = chartRef.current.getContext('2d');\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    const chartData = {\n      labels: data.map((_, index) => index + 1),\n      datasets: [{\n        label: chartLabel,\n        data: data,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 2,\n        fill: false,\n        pointStyle: 'hidden'\n      }]\n    };\n    chartInstance.current = new Chart(ctx, {\n      type: 'line',\n      data: chartData,\n      options: {\n        elements: {\n          point: {\n            radius: 0\n          }\n        }\n      }\n    });\n  };\n  const handleBack = () => {\n    setData([]);\n    setMessage('');\n    setChartLabel('');\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    setRenderChartFlag(false);\n    clearInterval(intervalId);\n    navigate(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-container\",\n        onClick: handleButtonClick,\n        children: \"Plot PPG Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-container\",\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-container\",\n          children: \"Home page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }, this), renderChartFlag && /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      width: \"400\",\n      height: \"200\",\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(PPGData, \"N4bHU5Q/SK3J/H0diIdB9caBAHc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PPGData;\nexport default PPGData;\nvar _c;\n$RefreshReg$(_c, \"PPGData\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Chart","useParams","Link","useNavigate","jsxDEV","_jsxDEV","PPGData","_s","patientId","data","setData","message","setMessage","chartLabel","setChartLabel","renderChartFlag","setRenderChartFlag","chartRef","chartInstance","startFlag","setStartFlag","intervalId","setIntervalId","clearInterval","length","current","renderChart","fetchData","endpoint","response","get","error","console","navigate","handleButtonClick","id","setInterval","ctx","getContext","destroy","chartData","labels","map","_","index","datasets","label","borderColor","borderWidth","fill","pointStyle","type","options","elements","point","radius","handleBack","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","to","style","fontWeight","width","height","ref","_c","$RefreshReg$"],"sources":["D:/react/bp/src/PPGData.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport Chart from 'chart.js/auto';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom'; \r\nimport './PatientRegistration.css';\r\nimport './ButtonContainer.css'; \r\n\r\nfunction PPGData() {\r\n  const { patientId } = useParams(); \r\n  const [data, setData] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [chartLabel, setChartLabel] = useState('');\r\n  const [renderChartFlag, setRenderChartFlag] = useState(false); \r\n  const chartRef = useRef(null);\r\n  const chartInstance = useRef(null);\r\n  const [startFlag, setStartFlag] = useState(false);\r\n  const [intervalId, setIntervalId] = useState(null); \r\n\r\n  useEffect(() => {\r\n    return () => clearInterval(intervalId);\r\n  }, [intervalId]);\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0 && chartRef.current && renderChartFlag) {\r\n      renderChart();\r\n    }\r\n  }, [data, renderChartFlag]);\r\n\r\n  const fetchData = async (endpoint) => {\r\n    if (!patientId) return; \r\n    try {\r\n      const response = await axios.get(`http://127.0.0.1:80/api/${endpoint}/${patientId}`);\r\n      setData(response.data);\r\n      setMessage(''); \r\n      setRenderChartFlag(true); \r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setMessage(`Error fetching data: ${error.message}`);\r\n    }\r\n  };\r\n  \r\n  const navigate = useNavigate();\r\n  \r\n  const handleButtonClick = () => {\r\n    fetchData('ppg');\r\n    setChartLabel('PPG Data');\r\n    const id = setInterval(() => {\r\n      fetchData('ppg');\r\n    }, 5000);\r\n    setIntervalId(id);\r\n    \r\n  };\r\n  \r\n  const renderChart = () => {\r\n    const ctx = chartRef.current.getContext('2d');\r\n\r\n    if (chartInstance.current) {\r\n      chartInstance.current.destroy();\r\n    }\r\n\r\n    const chartData = {\r\n      labels: data.map((_, index) => index + 1),\r\n      datasets: [\r\n        {\r\n          label: chartLabel,\r\n          data: data,\r\n          borderColor: 'rgba(75, 192, 192, 1)',\r\n          borderWidth: 2,\r\n          fill: false,\r\n          pointStyle: 'hidden'\r\n        },\r\n      ],\r\n    };\r\n\r\n    chartInstance.current = new Chart(ctx, {\r\n      type: 'line',\r\n      data: chartData,\r\n      options: {\r\n        elements: {\r\n          point: {\r\n            radius: 0 \r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setData([]);\r\n    setMessage(''); \r\n    setChartLabel('');\r\n    if (chartInstance.current) {\r\n      chartInstance.current.destroy();\r\n    }\r\n    setRenderChartFlag(false);\r\n    clearInterval(intervalId);\r\n    navigate(-1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"button-container\">\r\n        <button className=\"button-container\" onClick={handleButtonClick}>Plot PPG Data</button>\r\n        <button className=\"button-container\" onClick={handleBack}>Back</button>\r\n        <Link to=\"/\">\r\n          <button className=\"button-container\">Home page</button>\r\n        </Link>\r\n      </div>\r\n\r\n      {message && <p style={{ fontWeight: 'bold' }}>{message}</p>}\r\n      \r\n      {renderChartFlag && <canvas id=\"myChart\" width=\"400\" height=\"200\" ref={chartRef}></canvas>}\r\n     \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PPGData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}