{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\bp\\\\src\\\\SelectPatient.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\nimport styles from './SelectPatient.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectPatient() {\n  _s();\n  const [patientId, setPatientId] = useState('');\n  const navigate = useNavigate(); // Initialize navigate function\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Navigate to the ChartPage route with the patientId as a URL parameter\n    navigate(`/charts/${patientId}`);\n  };\n  const handleChange = event => {\n    setPatientId(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"patientId\",\n        children: \"Enter Patient ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"patientId\",\n        name: \"patientId\",\n        value: patientId,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectPatient, \"GQzvsZkU29vx9fs/D+esKL+xAXQ=\", false, function () {\n  return [useNavigate];\n});\n_c = SelectPatient;\nexport default SelectPatient;\nvar _c;\n$RefreshReg$(_c, \"SelectPatient\");","map":{"version":3,"names":["React","useState","useNavigate","styles","jsxDEV","_jsxDEV","SelectPatient","_s","patientId","setPatientId","navigate","handleSubmit","event","preventDefault","handleChange","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","onChange","_c","$RefreshReg$"],"sources":["D:/react/bp/src/SelectPatient.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\r\nimport styles from './SelectPatient.module.css'; \r\nfunction SelectPatient() {\r\n  const [patientId, setPatientId] = useState('');\r\n  const navigate = useNavigate(); // Initialize navigate function\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Navigate to the ChartPage route with the patientId as a URL parameter\r\n    navigate(`/charts/${patientId}`);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setPatientId(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h2>Select Patient</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"patientId\">Enter Patient ID:</label>\r\n        <input type=\"text\" id=\"patientId\" name=\"patientId\" value={patientId} onChange={handleChange} />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectPatient;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACAH,QAAQ,CAAE,WAAUF,SAAU,EAAC,CAAC;EAClC,CAAC;EAED,MAAMM,YAAY,GAAIF,KAAK,IAAK;IAC9BH,YAAY,CAACG,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bb,OAAA;MAAAa,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBjB,OAAA;MAAMkB,QAAQ,EAAEZ,YAAa;MAAAO,QAAA,gBAC3Bb,OAAA;QAAOmB,OAAO,EAAC,WAAW;QAAAN,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpDjB,OAAA;QAAOoB,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,WAAW;QAACC,IAAI,EAAC,WAAW;QAACX,KAAK,EAAER,SAAU;QAACoB,QAAQ,EAAEd;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/FjB,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACf,EAAA,CAxBQD,aAAa;EAAA,QAEHJ,WAAW;AAAA;AAAA2B,EAAA,GAFrBvB,aAAa;AA0BtB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}